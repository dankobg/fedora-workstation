---
# tasks file for restic

- name: Get the latest GitHub release data
  ansible.builtin.uri:
    url: https://api.github.com/repos/restic/restic/releases/latest
    return_content: true
  register: restic_latest_release_data

- name: Set the release version
  ansible.builtin.set_fact:
    restic_latest_release_version: "{{ restic_latest_release_data.json.tag_name }}"

- name: Set the release artifact
  vars:
    arch_name:
      amd: amd64
      arm: arm64
  ansible.builtin.set_fact:
    restic_release_artifact: "restic_{{ restic_latest_release_version[1:] }}_{{ ansible_facts.system | lower }}_{{ arch_name[archs.get(ansible_facts.architecture)] | default(ansible_facts.architecture) }}"

- name: Create download temporary directory
  ansible.builtin.tempfile:
    state: directory
    prefix: restic_
  register: restic_tempdir

- name: Download artifact
  ansible.builtin.get_url:
    url: "https://github.com/restic/restic/releases/download/{{ restic_latest_release_version }}/{{ restic_release_artifact }}.bz2"
    dest: "{{ restic_tempdir.path }}"
    owner: "{{ username }}"
    group: "{{ username }}"
    mode: a+x

- name: Uncompress bz2 artifact
  ansible.builtin.command:
    cmd: "bunzip2 {{ restic_tempdir.path }}/{{ restic_release_artifact }}.bz2"
    creates: "{{ restic_tempdir.path }}/{{ restic_release_artifact }}"

- name: Copy binary
  ansible.builtin.copy:
    src: "{{ restic_tempdir.path }}/{{ restic_release_artifact }}"
    dest: /usr/local/bin/restic
    owner: "{{ username }}"
    group: "{{ username }}"
    mode: a+x
    remote_src: true

- name: Cleanup temp files
  ansible.builtin.file:
    path: "{{ restic_tempdir.path }}"
    state: absent
