---
- name: Check if installed
  become: true
  become_user: "{{ username }}"
  ansible.builtin.command:
    cmd: type restic
  changed_when: false
  register: restic_installed
  failed_when: "not ('restic: not found' in restic_installed.stderr or 'restic is' in restic_installed.stdout)"

- name: Get installed version data
  become: true
  become_user: "{{ username }}"
  ansible.builtin.command:
    cmd: restic version
  changed_when: false
  register: restic_installed_version_data
  failed_when: "'restic' not in restic_installed_version_data.stdout"
  when: restic_installed.rc == 0

- name: Set installed version
  ansible.builtin.set_fact:
    restic_installed_version: "{{ 'v' + restic_installed_version_data.stdout.split()[1] if restic_installed.rc == 0 else '' }}"

- name: Get the latest GitHub release data
  ansible.builtin.uri:
    url: https://api.github.com/repos/restic/restic/releases/latest
    return_content: true
  register: restic_latest_release_data

- name: Set the release version
  ansible.builtin.set_fact:
    restic_release_version: "{{ restic_latest_release_data.json.tag_name if restic_version == 'latest' else restic_version }}"

- name: Download and install
  when: restic_installed_version != restic_release_version
  block:
    - name: Set the release artifact
      vars:
        arch_name:
          amd: amd64
          arm: arm64
      ansible.builtin.set_fact:
        restic_release_artifact: "restic_{{ restic_release_version[1:] }}_{{ ansible_facts.system | lower }}_{{ arch }}"

    - name: Create download temporary directory
      ansible.builtin.tempfile:
        state: directory
        prefix: restic_
      register: restic_tempdir

    - name: Download artifact
      ansible.builtin.get_url:
        url: "https://github.com/restic/restic/releases/download/{{ restic_release_version }}/{{ restic_release_artifact }}.bz2"
        dest: "{{ restic_tempdir.path }}"
        owner: "{{ username }}"
        group: "{{ username }}"
        mode: a+x

    - name: Uncompress bz2 artifact
      ansible.builtin.command:
        cmd: "bunzip2 {{ restic_tempdir.path }}/{{ restic_release_artifact }}.bz2"
        creates: "{{ restic_tempdir.path }}/{{ restic_release_artifact }}"

    - name: Copy binary
      ansible.builtin.copy:
        src: "{{ restic_tempdir.path }}/{{ restic_release_artifact }}"
        dest: "{{ restic_path }}"
        owner: "{{ username }}"
        group: "{{ username }}"
        mode: a+x
        remote_src: true

    - name: Cleanup temp files
      ansible.builtin.file:
        path: "{{ restic_tempdir.path }}"
        state: absent
