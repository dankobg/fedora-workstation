---
# tasks file for delta

- name: Check if installed
  become: true
  become_user: "{{ username }}"
  ansible.builtin.command:
    cmd: type delta
  changed_when: false
  register: delta_installed
  failed_when: "not ('delta: not found' in delta_installed.stderr or 'delta is' in delta_installed.stdout)"

- name: Get installed version data
  become: true
  become_user: "{{ username }}"
  ansible.builtin.command:
    cmd: delta --version
  changed_when: false
  register: delta_installed_version_data
  failed_when: "'delta' not in delta_installed_version_data.stdout"
  when: delta_installed.rc == 0

- name: Set installed version
  ansible.builtin.set_fact:
    delta_installed_version: "{{ delta_installed_version_data.stdout.split()[1] if delta_installed.rc == 0 else '' }}"

- name: Get the latest GitHub release data
  ansible.builtin.uri:
    url: https://api.github.com/repos/dandavison/delta/releases/latest
    return_content: true
  register: delta_latest_release_data

- name: Set the release version
  ansible.builtin.set_fact:
    delta_release_version: "{{ delta_latest_release_data.json.tag_name if delta_version == 'latest' else delta_version }}"

- name: Download and install
  when: delta_installed_version != delta_release_version
  block:
    - name: Set the release artifact
      vars:
        arch_name:
          amd: x86_64
          arm: aarch64
      ansible.builtin.set_fact:
        delta_release_artifact: "delta-{{ delta_release_version }}-{{ arch }}-unknown-{{ ansible_facts.system | lower }}-gnu"

    - name: Create download temporary directory
      ansible.builtin.tempfile:
        state: directory
        prefix: delta_
      register: delta_tempdir

    - name: Unarchive artifact
      ansible.builtin.unarchive:
        src: "https://github.com/dandavison/delta/releases/download/{{ delta_release_version }}/{{ delta_release_artifact }}.tar.gz"
        dest: "{{ delta_tempdir.path }}"
        remote_src: true

    - name: Copy binary
      ansible.builtin.copy:
        src: "{{ delta_tempdir.path }}/{{ delta_release_artifact }}/delta"
        dest: "{{ delta_path }}"
        owner: "{{ username }}"
        group: "{{ username }}"
        mode: a+x
        remote_src: true

    - name: Cleanup temp files
      ansible.builtin.file:
        path: "{{ delta_tempdir.path }}"
        state: absent
