---
- name: Check if installed
  ansible.builtin.command:
    cmd: type k3d
  changed_when: false
  register: k3d_installed
  failed_when: "not ('k3d: not found' in k3d_installed.stderr or 'k3d is' in k3d_installed.stdout)"

- name: Get installed version data
  ansible.builtin.command:
    cmd: k3d --version
  changed_when: false
  register: k3d_installed_version_data
  failed_when: "'k3d' not in k3d_installed_version_data.stdout"
  when: k3d_installed.rc == 0

- name: Set installed version
  ansible.builtin.set_fact:
    k3d_installed_version: "{{ k3d_installed_version_data.stdout_lines[0].split()[2] if k3d_installed.rc == 0 else '' }}"

- name: Get the latest GitHub release data
  ansible.builtin.uri:
    url: https://api.github.com/repos/k3d-io/k3d/releases/latest
    return_content: true
  register: k3d_latest_release_data

- name: Set the release version
  ansible.builtin.set_fact:
    k3d_release_version: "{{ k3d_latest_release_data.json.tag_name if k3d_version == 'latest' else k3d_version }}"

- name: Download and install
  when: k3d_installed_version != k3d_release_version
  block:
    - name: Set the release version
      ansible.builtin.set_fact:
        k3d_release_version: "{{ k3d_latest_release_data.json.tag_name }}"

    - name: Set the release artifact
      vars:
        arch_name:
          amd: amd64
          arm: arm64
      ansible.builtin.set_fact:
        k3d_release_artifact: "k3d-{{ ansible_facts.system | lower }}-{{ arch_name[archs.get(ansible_facts.architecture)] | default(ansible_facts.architecture) }}"

    - name: Create download temporary directory
      ansible.builtin.tempfile:
        state: directory
        prefix: k3d_
      register: k3d_tempdir

    - name: Download artifact
      ansible.builtin.get_url:
        url: "https://github.com/k3d-io/k3d/releases/download/{{ k3d_release_version }}/{{ k3d_release_artifact }}"
        dest: "{{ k3d_tempdir.path }}"
        owner: "{{ username }}"
        group: "{{ username }}"
        mode: "0644"

    - name: Copy binary
      ansible.builtin.copy:
        src: "{{ k3d_tempdir.path }}/{{ k3d_release_artifact }}"
        dest: /usr/local/bin/k3d
        owner: "{{ username }}"
        group: "{{ username }}"
        mode: a+x
        remote_src: true

    - name: Cleanup temp files
      ansible.builtin.file:
        path: "{{ k3d_tempdir.path }}"
        state: absent
