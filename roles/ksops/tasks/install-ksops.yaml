---
- name: Check if installed
  become: true
  become_user: "{{ username }}"
  ansible.builtin.command:
    cmd: "command -v {{ ksops_binary_name }}"
  register: ksops_installed
  changed_when: false
  failed_when: ksops_installed.rc != 0 and ksops_installed.stderr != ""

# - name: Get installed version data
#   ansible.builtin.command:
#     cmd: "{{ ksops_binary_name }} --version"
#   register: ksops_installed_version_data
#   changed_when: false
#   failed_when: "ksops_installed_version_data.rc != 0 or (ksops_installed_version_data.rc == 0 and 'ksops' not in ksops_installed_version_data.stdout)"
#   when: ksops_installed.rc == 0

# ksops does not expose version flag lol
- name: Ensure ksops version file exists
  ansible.builtin.file:
    path: /usr/local/etc/ksops_version.txt
    state: touch
    owner: "{{ username }}"
    group: "{{ username }}"
    mode: "0644"
    modification_time: preserve
    access_time: preserve

- name: Get installed version data
  ansible.builtin.slurp:
    src: /usr/local/etc/ksops_version.txt
  register: ksops_installed_version_data

- name: Set installed version
  ansible.builtin.set_fact:
    ksops_installed_version: "{{ ksops_installed_version_data.content | b64decode | trim }}"

- name: Get the latest release data
  ansible.builtin.uri:
    url: https://api.github.com/repos/viaduct-ai/kustomize-sops/releases/latest
    return_content: true
    headers:
      Authorization: "{{ 'Bearer ' + github_pat if github_pat is defined else omit }}"
  register: ksops_latest_release_data
  retries: 3
  delay: 5

- name: Set the release version
  ansible.builtin.set_fact:
    ksops_release_version: "{{ ksops_latest_release_data.json.tag_name if ksops_version == 'latest' else ksops_version }}"

- name: Download and install
  when: ksops_installed_version != ksops_release_version
  block:
    - name: Set the release artifact
      vars:
        arch_name:
          amd: x86_64
          arm: arm64
      ansible.builtin.set_fact:
        ksops_release_artifact: "ksops_{{ ksops_release_version[1:] }}_{{ ansible_facts.system }}_{{ arch }}"

    - name: Create download temporary directory
      ansible.builtin.tempfile:
        state: directory
        prefix: ksops_
      register: ksops_tempdir

    - name: Unarchive artifact
      ansible.builtin.unarchive:
        src: "https://github.com/viaduct-ai/kustomize-sops/releases/download/{{ ksops_release_version }}/{{ ksops_release_artifact }}.tar.gz"
        dest: "{{ ksops_tempdir.path }}"
        remote_src: true

    - name: Copy binary
      ansible.builtin.copy:
        src: "{{ ksops_tempdir.path }}/ksops"
        dest: "{{ ksops_binary_path }}"
        owner: "{{ username }}"
        group: "{{ username }}"
        mode: a+x
        remote_src: true

    - name: Write the version to a file
      ansible.builtin.lineinfile:
        path: /usr/local/etc/ksops_version.txt
        line: "{{ ksops_release_version }}"
        insertbefore: BOF
        state: present

    - name: Cleanup temp files
      ansible.builtin.file:
        path: "{{ ksops_tempdir.path }}"
        state: absent
