---
# tasks file for go

- name: Ensure not installed via dnf
  ansible.builtin.dnf:
    name:
      - golang
      - golang-src
    state: absent
    autoremove: true

- name: Ensure golang directory does not exist
  ansible.builtin.file:
    path: /usr/lib/golang
    state: absent

- name: Get the latest release data
  ansible.builtin.uri:
    url: https://go.dev/dl/?mode=json
    return_content: true
  register: go_latest_release_data

- name: Set the latest release version
  ansible.builtin.set_fact:
    go_latest_release_version: "{{ go_latest_release_data.json[0].version }}"

- name: Set the release artifact
  vars:
    arch_name:
      amd: amd64
      arm: arm64
  ansible.builtin.set_fact:
    go_release_artifact: "{{ go_latest_release_version }}.{{ ansible_facts.system | lower }}-{{ arch_name[archs.get(ansible_facts.architecture)] | default(ansible_facts.architecture) }}"

- name: Ensure clean extract path
  ansible.builtin.file:
    path: /usr/local/go
    state: absent

- name: Unarchive artifact
  ansible.builtin.unarchive:
    src: "https://go.dev/dl/{{ go_release_artifact }}.tar.gz"
    dest: "/usr/local"
    remote_src: true
    mode: "0755"

- name: Give executable permissions to binary
  ansible.builtin.file:
    path: "/usr/local/go/bin"
    owner: "{{ username }}"
    group: "{{ username }}"
    mode: a+x
    recurse: true
