---
- name: Ensure not installed via dnf
  ansible.builtin.dnf:
    name:
      - golang
      - golang-src
    state: absent
    autoremove: true

- name: Ensure golang directory does not exist
  ansible.builtin.file:
    path: /usr/lib/golang
    state: absent

- name: Check if installed
  ansible.builtin.command:
    cmd: type go
  changed_when: false
  register: go_installed
  failed_when: "not ('go: not found' in go_installed.stderr or 'go is' in go_installed.stdout)"

- name: Get installed version data
  ansible.builtin.command:
    cmd: go version
  changed_when: false
  register: go_installed_version_data
  failed_when: "'go' not in go_installed_version_data.stdout"
  when: go_installed.rc == 0

- name: Set installed version
  ansible.builtin.set_fact:
    go_installed_version: "{{ go_installed_version_data.stdout.split()[2] if go_installed.rc == 0 else '' }}"

- name: Get the latest release data
  ansible.builtin.uri:
    url: https://go.dev/dl/?mode=json
    return_content: true
  register: go_latest_release_data

- name: Set the release version
  ansible.builtin.set_fact:
    go_release_version: "{{ go_latest_release_data.json[0].version if go_version == 'latest' else go_version }}"

- name: Download and install
  when: go_installed_version != go_release_version
  block:
    - name: Set the release artifact
      vars:
        arch_name:
          amd: amd64
          arm: arm64
      ansible.builtin.set_fact:
        go_release_artifact: "{{ go_release_version }}.{{ ansible_facts.system | lower }}-{{ arch_name[archs.get(ansible_facts.architecture)] | default(ansible_facts.architecture) }}"

    - name: Ensure clean extract path
      ansible.builtin.file:
        path: "{{ go_dir }}"
        state: absent

    - name: Unarchive artifact
      ansible.builtin.unarchive:
        src: "https://go.dev/dl/{{ go_release_artifact }}.tar.gz"
        dest: "/usr/local"
        remote_src: true
        mode: "0755"

    - name: Give executable permissions to binary
      ansible.builtin.file:
        path: "{{ go_dir }}/bin"
        owner: "{{ username }}"
        group: "{{ username }}"
        mode: a+x
        recurse: true
