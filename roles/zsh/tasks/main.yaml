---
# tasks file for zsh

- name: Install zsh
  ansible.builtin.dnf:
    name: zsh
    state: "{{ zsh_state }}"

- name: Configure zsh
  when: zsh_state == 'latest'
  block:
    - name: Check if installed
      become: true
      become_user: "{{ username }}"
      ansible.builtin.command:
        cmd: type zsh
      changed_when: false
      register: zsh_installed
      failed_when: "'zsh is' not in zsh_installed.stdout"

    - name: Set zsh installed path
      ansible.builtin.set_fact:
        zsh_path: "{{ zsh_installed.stdout.split()[2] }}"

    - name: Copy .zshenv
      ansible.builtin.copy:
        src: zshenv
        dest: /etc/zshenv
        owner: "{{ username }}"
        group: "{{ username }}"
        mode: "0644"

    - name: Ensure zsh config directory exists
      ansible.builtin.file:
        path: "/home/{{ username }}/.config/zsh"
        state: directory
        owner: "{{ username }}"
        group: "{{ username }}"
        mode: "0755"
      register: config_dir

    - name: Copy zsh config files
      ansible.builtin.copy:
        src: "{{ item }}"
        dest: "/home/{{ username }}/.config/zsh/{{ item }}"
        owner: "{{ username }}"
        group: "{{ username }}"
        mode: "0644"
      loop:
        - ".aliasrc"
        - ".optionrc"
        - ".pluginrc"
        - ".p10k.zsh"
        - ".zshrc"

    - name: Ensure plugins directory exists
      ansible.builtin.file:
        path: "{{ config_dir.path }}/plugins"
        state: directory
        owner: "{{ username }}"
        group: "{{ username }}"
        mode: "0755"
      register: plugins_dir

    - name: Clone powerlevel10k repository
      become: true
      become_user: "{{ username }}"
      ansible.builtin.git:
        repo: https://github.com/romkatv/powerlevel10k.git
        version: master
        dest: "{{ plugins_dir.path }}/powerlevel10k"
        depth: 1
        clone: true

    - name: Clone zsh-autosuggestions repository
      become: true
      become_user: "{{ username }}"
      ansible.builtin.git:
        repo: https://github.com/zsh-users/zsh-autosuggestions.git
        version: master
        dest: "{{ plugins_dir.path }}/zsh-autosuggestions"
        depth: 1
        clone: true

    - name: Clone zsh-syntax-highlighting repository
      become: true
      become_user: "{{ username }}"
      ansible.builtin.git:
        repo: https://github.com/zsh-users/zsh-syntax-highlighting.git
        version: master
        dest: "{{ plugins_dir.path }}/zsh-syntax-highlighting"
        depth: 1
        clone: true

    - name: Clone fzf-tab repository
      become: true
      become_user: "{{ username }}"
      ansible.builtin.git:
        repo: https://github.com/Aloxaf/fzf-tab.git
        version: master
        dest: "{{ plugins_dir.path }}/fzf-tab"
        depth: 1
        clone: true

    - name: Clone zsh-completions repository
      become: true
      become_user: "{{ username }}"
      ansible.builtin.git:
        repo: https://github.com/zsh-users/zsh-completions.git
        version: master
        dest: "{{ plugins_dir.path }}/zsh-completions"
        depth: 1
        clone: true

    - name: Change shell to zsh
      ansible.builtin.user:
        name: "{{ username }}"
        shell: "{{ zsh_path }}"

- name: Remove zsh files
  ansible.builtin.file:
    path: "{{ item }}"
    state: absent
  loop:
    - "/home/{{ username }}.zshenv"
    - "/home/{{ username }}/.config/zsh"
  when: zsh_state == 'absent'

- name: Get bash path
  become: true
  become_user: "{{ username }}"
  ansible.builtin.command:
    cmd: command -v bash
  changed_when: false
  register: bash_path

- name: Change shell to bash
  ansible.builtin.user:
    name: "{{ username }}"
    shell: "{{ bash_path.stdout }}"
  when: zsh_state == 'absent'
