---
- name: Check if installed
  become: true
  become_user: "{{ username }}"
  ansible.builtin.command:
    cmd: "command -v {{ kanata_binary_name }}"
  changed_when: false
  register: kanata_installed
  failed_when: kanata_installed.rc != 0 and kanata_installed.stderr != ""

- name: Get installed version data
  become: true
  become_user: "{{ username }}"
  ansible.builtin.command:
    cmd: "{{ kanata_binary_name }} --version"
  register: kanata_installed_version_data
  changed_when: false
  failed_when: "kanata_installed_version_data.rc != 0 or (kanata_installed_version_data.rc == 0 and 'kanata' not in kanata_installed_version_data.stdout)"
  when: not kanata_installed.failed

- name: Set installed version
  ansible.builtin.set_fact:
    kanata_installed_version: "{{ 'v' + kanata_installed_version_data.stdout.split()[1] if not kanata_installed_version_data.failed else '' }}"

- name: Get the latest GitHub release data
  ansible.builtin.uri:
    url: https://api.github.com/repos/jtroo/kanata/releases/latest
    return_content: true
  register: kanata_latest_release_data

- name: Set the release version
  ansible.builtin.set_fact:
    kanata_release_version: "{{ kanata_latest_release_data.json.tag_name if kanata_version == 'latest' else kanata_version }}"

- name: Download and install
  when: kanata_installed_version != kanata_release_version
  block:
    - name: Set the release version
      ansible.builtin.set_fact:
        kanata_latest_release_version: "{{ kanata_latest_release_data.json.tag_name }}"

    - name: Create download temporary directory
      ansible.builtin.tempfile:
        state: directory
        prefix: kanata_
      register: kanata_tempdir

    - name: Download artifact
      ansible.builtin.get_url:
        url: "https://github.com/jtroo/kanata/releases/download/{{ kanata_latest_release_version }}/kanata"
        dest: "{{ kanata_tempdir.path }}"
        owner: "{{ username }}"
        group: "{{ username }}"
        mode: a+x

    - name: Copy binary
      ansible.builtin.copy:
        src: "{{ kanata_tempdir.path }}/kanata"
        dest: "{{ kanata_path }}"
        owner: "{{ username }}"
        group: "{{ username }}"
        mode: a+x
        remote_src: true

    - name: Cleanup temp files
      ansible.builtin.file:
        path: "{{ kanata_tempdir.path }}"
        state: absent
