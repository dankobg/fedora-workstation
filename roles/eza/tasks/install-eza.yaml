---
- name: Check if installed
  become: true
  become_user: "{{ username }}"
  ansible.builtin.command:
    cmd: "command -v {{ eza_binary_name }}"
  register: eza_installed
  changed_when: false
  failed_when: eza_installed.rc != 0 and eza_installed.stderr != ""

- name: Get installed version data
  become: true
  become_user: "{{ username }}"
  ansible.builtin.command:
    cmd: "{{ eza_binary_name }} --version"
  register: eza_installed_version_data
  changed_when: false
  failed_when: "eza_installed_version_data.rc != 0 or (eza_installed_version_data.rc == 0 and 'eza' not in eza_installed_version_data.stdout)"
  when: eza_installed.rc == 0

- name: Set installed version
  ansible.builtin.set_fact:
    eza_installed_version: "{{ eza_installed_version_data.stdout_lines[1].split()[0] if eza_installed.rc == 0 else '' }}"

- name: Get the latest release data
  ansible.builtin.uri:
    url: "{{ eza_latest_version_url }}"
    return_content: true
    headers:
      Authorization: "{{ 'Bearer ' + github_pat if github_pat is defined else omit }}"
  register: eza_latest_release_data
  retries: 3
  delay: 5

- name: Set the release version
  ansible.builtin.set_fact:
    eza_release_version: "{{ eza_latest_release_data.json.tag_name if eza_version == 'latest' else eza_version }}"

- name: Download and install
  when: eza_force_download or eza_installed_version != eza_release_version
  block:
    - name: Create download temporary directory
      ansible.builtin.tempfile:
        state: directory
        prefix: eza_
      register: eza_tempdir

    - name: Get sha256 text content
      ansible.builtin.set_fact:
        sha256_text: "{{ eza_latest_release_data.json.body.split('sha256sum')[1].split('md5sum')[0] | regex_replace('```|##', '') | trim }}"

    - name: Get search word rhs
      ansible.builtin.set_fact:
        search_word_rhs: "./target/bin-{{ eza_release_version[1:] }}/{{ eza_artifact_name }}"

    - name: Extract checksum
      ansible.builtin.set_fact:
        eza_checksum: "{{ eza_checksum_algorithm }}:{{ sha256_text | regex_search('([a-f0-9]{64})\\s+.*' ~ search_word_rhs) | split | first }}"

    - name: Download artifact
      ansible.builtin.get_url:
        url: "{{ eza_artifact_download_url }}"
        dest: "{{ eza_tempdir.path }}"
        checksum: "{{ eza_checksum }}"
        owner: "{{ username }}"
        group: "{{ username }}"
        mode: a+x
      register: downloaded_artifact

    - name: Unarchive artifact
      ansible.builtin.unarchive:
        src: "{{ downloaded_artifact.dest }}"
        dest: "{{ eza_tempdir.path }}"
        remote_src: true

    - name: Copy binary
      ansible.builtin.copy:
        src: "{{ eza_tempdir.path }}/eza"
        dest: "{{ eza_binary_path }}"
        owner: "{{ username }}"
        group: "{{ username }}"
        mode: a+x
        remote_src: true

    - name: Cleanup temp files
      ansible.builtin.file:
        path: "{{ eza_tempdir.path }}"
        state: absent
