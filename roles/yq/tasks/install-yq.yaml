---
- name: Check if installed
  become: true
  become_user: "{{ username }}"
  ansible.builtin.command:
    cmd: "command -v {{ yq_binary_name }}"
  changed_when: false
  register: yq_installed
  failed_when: yq_installed.rc != 0 and yq_installed.stderr != ""

- name: Get installed version data
  become: true
  become_user: "{{ username }}"
  ansible.builtin.command:
    cmd: "{{ yq_binary_name }} --version"
  register: yq_installed_version_data
  changed_when: false
  failed_when: "yq_installed_version_data.rc != 0 or (yq_installed_version_data.rc == 0 and 'yq' not in yq_installed_version_data.stdout)"
  when: not yq_installed.failed

- name: Set installed version
  ansible.builtin.set_fact:
    yq_installed_version: "{{ yq_installed_version_data.stdout.split()[3] if not yq_installed_version_data.failed else '' }}"

- name: Get the latest GitHub release data
  ansible.builtin.uri:
    url: https://api.github.com/repos/mikefarah/yq/releases/latest
    return_content: true
  register: yq_latest_release_data

- name: Set the release version
  ansible.builtin.set_fact:
    yq_release_version: "{{ yq_latest_release_data.json.tag_name if yq_version == 'latest' else yq_version }}"

- name: Download and install
  when: yq_installed_version != yq_release_version
  block:
    - name: Set the release artifact
      vars:
        arch_name:
          amd: amd64
          arm: arm64
      ansible.builtin.set_fact:
        yq_release_artifact: "yq_{{ ansible_facts.system | lower }}_{{ arch }}"

    - name: Create download temporary directory
      ansible.builtin.tempfile:
        state: directory
        prefix: yq_
      register: yq_tempdir

    - name: Download artifact
      ansible.builtin.get_url:
        url: "https://github.com/mikefarah/yq/releases/download/{{ yq_release_version }}/{{ yq_release_artifact }}"
        dest: "{{ yq_tempdir.path }}"
        mode: a+x

    - name: Copy binary
      ansible.builtin.copy:
        src: "{{ yq_tempdir.path }}/{{ yq_release_artifact }}"
        dest: "{{ yq_path }}"
        owner: "{{ username }}"
        group: "{{ username }}"
        mode: a+x
        remote_src: true

    - name: Cleanup temp files
      ansible.builtin.file:
        path: "{{ yq_tempdir.path }}"
        state: absent
