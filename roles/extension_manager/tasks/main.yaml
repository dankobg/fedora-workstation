---
# tasks file for extension_manager

- name: Install Extension Manager
  community.general.flatpak:
    name: com.mattjakeman.ExtensionManager
    state: "{{ extension_manager_state }}"

- name: Get the gnome shell version
  ansible.builtin.command:
    cmd: gnome-shell --version
  register: gnome_shell_version_data
  changed_when: false

- name: Get extensions info data
  ansible.builtin.uri:
    url: "https://extensions.gnome.org/extension-info/?pk={{ item.id }}&shell_version={{ gnome_shell_version_data.stdout.split()[2] | int }}"
    return_content: true
  register: gnome_extensions_info
  loop: "{{ extension_manager_gnome_extensions }}"
  retries: 3
  delay: 5

- name: Ensure individual extension directories exist
  ansible.builtin.file:
    path: "/{{ extension_manager_gnome_extensions_dir }}/{{ item.json.uuid }}"
    state: directory
    owner: root
    group: root
    mode: "0755"
  loop: "{{ gnome_extensions_info.results }}"

- name: Unarchive remote extensions
  ansible.builtin.unarchive:
    src: "{{ extension_manager_gnome_extensions_url }}{{ item.json.download_url }}"
    dest: "/{{ extension_manager_gnome_extensions_dir }}/{{ item.json.uuid }}"
    remote_src: true
  loop: "{{ gnome_extensions_info.results }}"

- name: Enable extensions
  ansible.builtin.command:
    cmd: >
      gnome-shell-extension-tool
      {{ '-e' if (extension_manager_gnome_extensions | selectattr('id', '==', item.json.pk) | first).state == 'present' else '-d' }}
      {{ item.json.uuid }}
  loop: "{{ gnome_extensions_info.results }}"
  changed_when: false
