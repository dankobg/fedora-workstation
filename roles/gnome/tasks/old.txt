# - name: Create dconf temporary directory
#   ansible.builtin.tempfile:
#     state: directory
#     prefix: dconf_
#   register: dconf_tempdir

# - name: Backup old dconf-all settings
#   ansible.builtin.shell:
#     cmd: "set -o pipefail; dconf dump / > {{ dconf_tempdir.path }}/dconf-all.bak"
#     creates: "{{ dconf_tempdir.path }}/dconf-all.bak"

# - name: Copy dconf-all settings
#   ansible.builtin.template:
#     src: dconf-all.j2
#     dest: "{{ dconf_tempdir.path }}/dconf-all"
#     owner: "{{ username }}"
#     group: "{{ username }}"
#     mode: "0644"

# - name: Get dconf-all and dconf-all.bak files info
#   ansible.builtin.stat:
#     path: "{{ dconf_tempdir.path }}/{{ item }}"
#   register: dconf_files
#   loop:
#     - dconf-all.bak
#     - dconf-all

# - name: Load all dconf settings
#   ansible.builtin.shell: "set -o pipefail; dconf load -f / < {{ dconf_tempdir.path }}/dconf-all"
#   changed_when: dconf_files.results[0].stat.checksum != dconf_files.results[1].stat.checksum
#   notify: Update dconf db

# - name: Cleanup temp files
#   ansible.builtin.file:
#     path: "{{ dconf_tempdir.path }}"
#     state: absent