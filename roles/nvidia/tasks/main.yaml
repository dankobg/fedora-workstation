---
# tasks file for nvidia

- name: Install Nvidia GPU drivers
  ansible.builtin.dnf5:
    name:
      - akmod-nvidia
      - xorg-x11-drv-nvidia
      - xorg-x11-drv-nvidia-cuda
      - xorg-x11-drv-nvidia-cuda-libs
      - intel-media-driver
      - vulkan-loader
      - vulkan-tools
      - mesa-vulkan-drivers
      - libva-nvidia-driver
      - libva-utils
      - vdpauinfo
    state: latest
    update_cache: true

- name: Mark the drivers so they aren't considered as unneeded by accident
  ansible.builtin.command:
    cmd: dnf mark user akmod-nvidia -y
  changed_when: false

- name: Check the kernel module version
  ansible.builtin.command:
    cmd: modinfo -F version nvidia
  register: kernel_module_status
  changed_when: false
  failed_when: >
    not (kernel_module_status.stdout | regex_search('^\d+\.\d+(\.\d+)?$') or 'Module nvidia not found' in kernel_module_status.stdout)
  retries: 10
  delay: 30
  until: >
    kernel_module_status.stdout | regex_search('^\d+\.\d+(\.\d+)?$')

- name: Display the kernel module status
  ansible.builtin.debug:
    msg: "{{ kernel_module_status.stdout }}"
  failed_when: false

- name: Check if a reboot is required
  ansible.builtin.command:
    cmd: dnf needs-restarting -r -s
  register: reboot_required
  changed_when: "'Reboot should not be necessary' not in reboot_required.stdout"
  failed_when: false
  notify: Reboot machine
#
# Problem is that i am using connection: local
# so nvidia-smi won't work unless after reboot
# I could reboot manually and then rerun playbook but it is still manual work...
#
# - name: Check that nvidia-smi works
#   ansible.builtin.command:
#     cmd: nvidia-smi
#   register: nvidia_smi_status
#   changed_when: false
#   failed_when: >
#     'NVIDIA-SMI' not in nvidia_smi_status.stdout or
#     'Driver Version' not in nvidia_smi_status.stdout or
#     'CUDA Version' not in nvidia_smi_status.stdout
#   retries: 6
#   delay: 10
#   until: >
#     'NVIDIA-SMI' in nvidia_smi_status.stdout and
#     'Driver Version' in nvidia_smi_status.stdout and
#     'CUDA Version' in nvidia_smi_status.stdout
