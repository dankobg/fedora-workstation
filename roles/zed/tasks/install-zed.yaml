---
- name: Check if installed
  ansible.builtin.command:
    cmd: type eza
  changed_when: false
  register: eza_installed
  failed_when: "not ('eza: not found' in eza_installed.stderr or 'eza is' in eza_installed.stdout)"

- name: Get installed version data
  ansible.builtin.command:
    cmd: eza --version
  changed_when: false
  register: eza_installed_version_data
  failed_when: "'eza' not in eza_installed_version_data.stdout"
  when: eza_installed.rc == 0

- name: Set installed version
  ansible.builtin.set_fact:
    eza_installed_version: "{{ eza_installed_version_data.stdout_lines[1].split()[0] if eza_installed.rc == 0 else '' }}"

- name: Get the latest GitHub release data
  ansible.builtin.uri:
    url: https://api.github.com/repos/zed-industries/zed/releases/latest
    return_content: true
  register: zed_latest_release_data

- name: Set the release version
  ansible.builtin.set_fact:
    eza_release_version: "{{ eza_latest_release_data.json.tag_name if eza_version == 'latest' else eza_version }}"

- name: Download and install
  when: eza_installed_version != eza_release_version
  block:
    - name: Set the release artifact
      vars:
        arch_name:
          amd: x86_64
          arm: aarch64
      ansible.builtin.set_fact:
        zed_release_artifact: "zed-{{ ansible_facts.system | lower }}-{{ arch_name[archs.get(ansible_facts.architecture)] | default(ansible_facts.architecture) }}"

    - name: Create download temporary directory
      ansible.builtin.tempfile:
        state: directory
        prefix: zed_
      register: zed_tempdir

    - name: Unarchive artifact
      ansible.builtin.unarchive:
        src: "https://github.com/zed-industries/zed/releases/download/{{ zed_release_version }}/{{ zed_release_artifact }}.tar.gz"
        dest: "{{ zed_tempdir.path }}"
        remote_src: true

    - name: Copy binary
      ansible.builtin.copy:
        src: "{{ zed_tempdir.path }}/zed.app/bin/zed"
        dest: "{{ zed_path }}"
        owner: "{{ username }}"
        group: "{{ username }}"
        mode: a+x
        remote_src: true

    - name: Cleanup temp files
      ansible.builtin.file:
        path: "{{ zed_tempdir.path }}"
        state: absent
